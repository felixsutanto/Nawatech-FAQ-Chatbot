version: '3.8'

services:
  nawatech-chatbot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nawatech-faq-chatbot
    ports:
      - "8501:8501"
    environment:
      # OpenAI Configuration
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-3.5-turbo}
      - TEMPERATURE=${TEMPERATURE:-0.7}
      - MAX_TOKENS=${MAX_TOKENS:-1000}
      
      # RAG Configuration
      - CHUNK_SIZE=${CHUNK_SIZE:-1000}
      - CHUNK_OVERLAP=${CHUNK_OVERLAP:-200}
      - RETRIEVAL_K=${RETRIEVAL_K:-4}
      
      # Security Configuration
      - RATE_LIMIT_PER_MINUTE=${RATE_LIMIT_PER_MINUTE:-10}
      - RATE_LIMIT_PER_HOUR=${RATE_LIMIT_PER_HOUR:-100}
      
      # Application Configuration
      - DEBUG_MODE=${DEBUG_MODE:-false}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - ENVIRONMENT=production
    
    volumes:
      # Mount data directory for FAQ files and vector store
      - ./data:/app/data:ro
      # Mount logs directory
      - chatbot_logs:/app/logs
    
    restart: unless-stopped
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G
    
    # Security options
    security_opt:
      - no-new-privileges:true
    
    # Network configuration
    networks:
      - chatbot-network

  # Optional: Redis for rate limiting and caching in production
  redis:
    image: redis:7-alpine
    container_name: nawatech-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    networks:
      - chatbot-network
    profiles:
      - with-redis

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: nawatech-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - nawatech-chatbot
    restart: unless-stopped
    networks:
      - chatbot-network
    profiles:
      - with-nginx

volumes:
  chatbot_logs:
    driver: local
  redis_data:
    driver: local

networks:
  chatbot-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16